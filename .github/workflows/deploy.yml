name: 'Deploy'

on:
  workflow_dispatch:
  push:
    branches:
      - master

permissions:
  contents: write
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'

jobs:
  deploy:
    if: ${{ github.ref == 'refs/heads/master' }}
    name: Deploy
    runs-on: ubuntu-latest

    steps:

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: master
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Reset develop branch on runner
        run: |
          git fetch origin develop:develop
          git reset --hard develop

      - name: Build Changelog since the latest tag
        id: build_changelog
        run: |
          LATEST_TAG=$(git describe --tags $(git rev-list --tags --max-count=1))
          echo "latest_tag=$LATEST_TAG" >> $GITHUB_OUTPUT

          EOF="$(dd if=/dev/urandom bs=15 count=1 status=none | base64)"
          echo "CHANGELOG<<${EOF}" >> "${GITHUB_OUTPUT}"
          echo "$(git log  --pretty=format:"* %s" --no-merges ${LATEST_TAG}..HEAD)" >> "${GITHUB_OUTPUT}"
          echo "${EOF}" >> "${GITHUB_OUTPUT}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Choose and set PR title
        id: title
        run: |
          DATE=$(date +%Y-%m-%d)
          SEPERATOR="-"
          for LETTER in {a..z}; do if [[ "$DATE$SEPARATOR$LETTER" > "${{ steps.build_changelog.outputs.latest_tag }}" ]]; then echo "pr_title=$DATE$SEPARATOR$LETTER" >> $GITHUB_OUTPUT && break; fi; done

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=raw,value=${{ steps.title.outputs.pr_title }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./
          file: docker/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Create a GitHub release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.title.outputs.pr_title }}
          release_name: Release ${{ steps.title.outputs.pr_title }}
          body: |
            ${{ steps.build_changelog.outputs.changelog }}
