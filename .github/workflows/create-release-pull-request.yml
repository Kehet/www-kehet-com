name: Create Release Pull Request

on:
  workflow_dispatch:
  push:
    branches:
      - develop

permissions:
  contents: write
  pull-requests: write

jobs:
  create-release-pull-request:
    name: Create Release Pull Request
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: master
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Reset develop branch on runner
        run: |
          git fetch origin develop:develop
          git reset --hard develop

      - name: Build Changelog since the latest tag
        id: build_changelog
        run: |
          LATEST_TAG=$(git describe --tags $(git rev-list --tags --max-count=1))
          echo "latest_tag=$LATEST_TAG" >> $GITHUB_OUTPUT

          EOF="$(dd if=/dev/urandom bs=15 count=1 status=none | base64)"
          echo "CHANGELOG<<${EOF}" >> "${GITHUB_OUTPUT}"
          echo "$(git log  --pretty=format:"* %s" --no-merges ${LATEST_TAG}..HEAD)" >> "${GITHUB_OUTPUT}"
          echo "${EOF}" >> "${GITHUB_OUTPUT}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Choose and set PR title
        id: title
        run: |
          DATE=$(date +%Y-%m-%d)
          SEPERATOR="-"
          for LETTER in {a..z}; do if [[ "$DATE$SEPARATOR$LETTER" > "${{ steps.build_changelog.outputs.latest_tag }}" ]]; then echo "pr_title=$DATE$SEPARATOR$LETTER" >> $GITHUB_OUTPUT && break; fi; done

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          branch: release-candidate
          title: Release ${{ steps.title.outputs.pr_title }}
          body: ${{ steps.build_changelog.outputs.changelog }}
